x-common-settings: &common-settings
  networks:
    - sincerely_network
  restart: unless-stopped

#env 처리 해야함
x-db-environment: &db-environment
  DB_HOST: postgres
  DB_PORT: ${POSTGRES_PORT}
  DB_USERNAME: ${POSTGRES_USER}
  DB_PASSWORD: ${POSTGRES_PASSWORD}
  DB_DATABASE: ${POSTGRES_DB}

services:
  nginx:
    <<: *common-settings
    image: nginx:alpine
    ports:
      - '${NGINX_PORT}:80'
    volumes:
      - ./nginx/api_server.conf:/etc/nginx/conf.d/api_server.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - sincerely_api

  sincerely_api:
    <<: *common-settings
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/opt/server
      - /opt/server/node_module
    ports:
      - '${API_PORT}:3000'
      - '${DEBUG_PORT}:9229'
    environment:
      <<: *db-environment
    depends_on:
      - postgres
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/'] # 헬스체크 엔드포인트
      interval: 30s # 체크 주기
      timeout: 10s # 타임아웃
      retries: 3 # 재시도 횟수
      start_period: 40s # 초기 컨테이너 시작 대기 시간

  postgres:
    <<: *common-settings
    image: postgres:16
    ports:
      - '${POSTGRES_PORT}:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:

networks:
  sincerely_network:
    driver: bridge
